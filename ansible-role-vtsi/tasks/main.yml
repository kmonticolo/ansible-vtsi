---
# tasks file for ansible-role-vtsi
- name: Include vars
  include_vars:
    file: hosts.yml

- name: Test variables
  assert:
    that:
      - vtsi_hostname is defined
      - vtsi_group is defined
      - vtsi_user is defined
      - vtsi_directory is defined
      - vtsi_build is defined
      - vtsi_mirror is defined
      - vtsi_tmp_dir is defined
      
- name: Set hostname in /etc/hostname
  copy:
    content: "{{ vtsi_hostname }}"
    dest: /etc/hostname
    force: no

- name: Ensure group "{{ vtsi_group }}" exists
  group:
    name: "{{ vtsi_group }}"
    state: present

- name: Ensure user "{{ vtsi_user }}" exists
  user:
    name: "{{ vtsi_user }}"
    shell: /bin/bash
    groups: "{{ vtsi_group }},wheel"
    password: $6$baaEcM7F$gy7oQtnQkE4hWci2gD6uI0x.jtPDFMFqCFlEwZAdnEnnPxa19Wp1kN4g4XJ33siKto5SewQ.zGc.9zOiGrrym/

- name: Populate service facts
  service_facts:

- name: Stop vTSI service
  service:
    name: vtsi
    state: stopped
  when: "'vtsi' in services"

- name: Check if vtsi PID file exists
  stat:
    path: "{{ vtsi_directory }}/bin/./vTSI.pid"
  register: vtsi_pid
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: Remove H2 DB to avoid conflicts on environments
  file:
    path: /seachange/local/vtsi/bin/h2.mv.db
    state: absent

- name: Unarchive {{ vtsi_build }} vtsi
  unarchive:
    src: "{{ vtsi_mirror }}"
    dest: "{{ vtsi_tmp_dir }}"
    remote_src: yes
    creates: "{{ vtsi_tmp_dir }}/vtsi-kit/"

- name: Find rpm files to install
  find:
    paths: "{{ vtsi_tmp_dir }}/vtsi-kit/rpms/"
    patterns: 'jdk*.rpm,seachange*.rpm,vtsi*.rpm'
  register: rpms

- name: Install rpms
  yum:
    name: "{{ rpms.files |  map(attribute='path') | list }}"

- name: Apply application-vtsi.properties configuration
  template:
    src: application-vtsi.properties
    dest: "{{ vtsi_directory }}/config/"
    backup: yes
  notify:
    - restart vtsi
    - reload systemd

- name: Copy log4j file
  copy:
    src: "{{ vtsi_directory }}/config/log4j2-sample.xml"
    dest: "{{ vtsi_directory }}/config/log4j2.xml"
    remote_src: yes
  notify:
    - restart vtsi
    - reload systemd

- name: Flush handlers
  meta: flush_handlers

- name: Make sure vTSI service is enabled and started
  service:
    name: vtsi
    state: started
    enabled: yes
  ignore_errors: true # due to broken tanuki wrapper return codes
#
# - name: Make sure vTSI is responding on configured port
#   wait_for: port={{ item }} delay=3 timeout=300
#   with_items:
#     - 8080
#     - 8021
