---
# tasks file for ansible-role-vtsi
- name: Ensure group "{{ vtsi_user }}" exists
  group:
    name: "{{ vtsi_user }}"
    state: present

- name: Ensure user "{{ vtsi_user }}" exists
  user:
    name: "{{ vtsi_user }}"
    shell: /bin/bash
    groups: "{{ vtsi_user }},wheel"

- name: Unarchive {{ build }} vtsi
  unarchive:
    src: "{{ mirror }}"
    dest: "{{ tmp_dir }}"
    remote_src: yes
    creates: "{{ tmp_dir }}/vtsi-kit/"

- name: Check if vtsi PID file exists
  stat:
    path: "{{ vtsi_directory }}/bin/./vTSI.pid"
  register: vtsi_pid
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: Run migrate.sh
  command: /bin/sh migration/migrate.sh
  args:
    chdir: "{{ tmp_dir }}/vtsi-kit"
  when: not vtsi_pid.stat.exists

- name: Find rpm files to install
  find:
    paths: "{{ tmp_dir }}/vtsi-kit/rpms/"
    patterns: '*.rpm'
  register: rpms

- name: Install rpms
  yum:
    name: "{{ rpms.files |  map(attribute='path') | list }}"

- name: Apply application-vtsi.properties configuration
  template:
    src: application-vtsi.properties
    dest: "{{ vtsi_directory }}/config/"
    backup: yes
  notify:
    - restart vtsi

- name: Copy log4j file
  copy:
    src: "{{ vtsi_directory }}/config/log4j2-sample.xml"
    dest: "{{ vtsi_directory }}/config/log4j2.xml"
    remote_src: yes
  notify:
    - restart vtsi

- name: Flush handlers
  meta: flush_handlers

- name: Make sure vTSI service is enabled and started
  service:
    name: vtsi
    state: started
    enabled: yes

- name: Make sure vTSI is responding on configured port
  wait_for: port={{ item }} delay=3 timeout=300
  with_items:
    - 8080
    - 8021
