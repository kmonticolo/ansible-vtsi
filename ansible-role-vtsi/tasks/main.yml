---
# tasks file for ansible-role-vtsi

- name: Generate /etc/hosts file
  template:
    src=etc/hosts.j2
    dest=/etc/hosts
  notify:
    - restart vtsi

- name: ensure group "{{ vtsi_user }}" exists
  group:
    name: "{{ vtsi_user }}"
    state: present

- name: ensure user "{{ vtsi_user }}" exists
  user:
    name: "{{ vtsi_user }}"
    shell: /bin/bash
    groups: "{{ vtsi_user }},wheel"

- name: Unarchive latest vtsi
  unarchive:
    src: "{{ mirror }}"
    dest: "{{ tmp_dir }}"
    remote_src: yes
    creates: "{{ tmp_dir }}/vtsi-kit/"

- name: check if vtsi PID file exists
  stat:
    path: /seachange/local/vtsi/bin/./vTSI.pid
  register: vtsi_pid
  changed_when: no
  failed_when: no
  become: no
  check_mode: no

- name: run migrate.sh
  command: /bin/sh migration/migrate.sh
  args:
    chdir: "{{ tmp_dir }}/vtsi-kit"
  when: vtsi_pid.stat.exists == 0

- name: find rpm files to install
  find:
    paths: "{{ tmp_dir }}/vtsi-kit/rpms/"
    patterns: '*.rpm'
  register: rpms

- name: install rpms
  yum:
    name: "{{ rpms.files |  map(attribute='path') | list }}"

- name: create application-vtsi.properties configuration
  template:
    src: application-vtsi.properties
    dest: /seachange/local/vtsi/config/
    backup: yes
  notify:
    - restart vtsi

- name: copy log4j file
  copy:
    src: /seachange/local/vtsi/config/log4j2-sample.xml
    dest: /seachange/local/vtsi/config/log4j2.xml
    remote_src: yes
  notify:
    - restart vtsi

- name: Start service vtsi
  service:
    name: vtsi
    state: started
    enabled: yes
